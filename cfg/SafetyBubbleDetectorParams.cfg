#!/usr/bin/env python
package = "adi_3dtof_safety_bubble_detector"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       Name                          Type    Level Description              Default Min   Max
gen.add("safety_bubble_radius_in_mtr", double_t,  0, "Safety bubble radius in meters", 1, 0.1, 3)

shape_of_safety_bubble_enum = gen.enum([ gen.const("Circular", int_t, 0, "Circular Safety bubble"),
                       gen.const("Square", int_t, 1, "Squarish Safety bubble")], "An enum to decide shape of safety bubble")

gen.add("shape_of_safety_bubble", int_t, 0, "A shape_of_safety_bubble parameter which is edited via an enum", 0, 0, 1, edit_method=shape_of_safety_bubble_enum)

gen.add("safety_bubble_detection_sensitivity", int_t,  0, "Number of connected pixels required for detection", 10, 5, 50)

gen.add("enable_ransac_floor_detection",   bool_t,   0, "enables ransac algorithm to remove floor",  True)

gen.add("enable_floor_paint",   bool_t,   0, "This parameter enables the visualization of floor",  False)

gen.add("enable_safety_bubble_zone_visualization",   bool_t,   0, "Enabling this parameter shows the safety bubble",  True)

#if any changes in the default values of these 2 variables are done, please change it in the similar private variables of the node.
gen.add("ab_threshold", int_t, 0, "Set AB threshold value, The impact of this setting is only seen in real time and not during file IO.", 10, 1, 255)

gen.add("confidence_threshold", int_t , 0, "Set confidence threshold value, The impact of this setting is only seen in real time and not during file IO.", 10, 1, 255)

exit(gen.generate(package, "adi_3dtof_safety_bubble_detector", "SafetyBubbleDetectorParams"))
